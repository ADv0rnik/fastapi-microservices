version: '3.9'

services:
  rabbit:
    image: lucifer8591/rabbitmq-server:3.7.17
    container_name: rabbit
    env_file:
      - .env
    hostname: rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:15672" ]
      interval: 30s
      timeout: 20s
      retries: 3
  db:
    image: postgres:14.5
    container_name: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - ${DB_PORT}:${DB_PORT}
    command: -p ${DB_PORT}
    depends_on:
      - rabbit
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASS}
    ports:
      - 5555:80
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
  app:
    container_name: producer
    build:
      context: ./srv_inventory
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./srv_inventory:/app
    ports:
      - 8000:8000
    depends_on:
      - db
      - rabbit
    restart: always
    command: ["python", "main.py"]

volumes:
  postgres_data:
  pgadmin_data: